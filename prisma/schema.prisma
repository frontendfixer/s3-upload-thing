generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String      @id @default(uuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?   @map("email_verified")
  image         String?
  accounts      Accounts[]
  File          Files[]
  UserUsage     UserUsage[]

  @@map("user")
}

model Accounts {
  id                    String  @id @default(uuid())
  userId                String  @map("user_id")
  type                  String
  provider              String
  providerAccountId     String  @map("provider_account_id")
  refreshToken          String? @map("refresh_token") @db.Text
  accessToken           String? @map("access_token") @db.Text
  expiresAt             Int?    @map("expires_at")
  tokenType             String? @map("token_type")
  scope                 String?
  idToken               String? @map("id_token") @db.Text
  sessionState          String? @map("session_state")
  acceptedAIDataConsent Boolean @default(false)

  user Users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("account")
}

model Files {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  filename  String   @map("filename")
  mimeType  String   @map("mime_type")
  size      Int
  s3Key     String   @unique
  createdAt DateTime @default(now()) @map("created_at")

  user Users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("file")
}

model UserUsage {
  id                 String   @id @default(uuid())
  userId             String   @map("user_id")
  storageUsedBytes   Int      @default(0) @map("storage_used_bytes")
  bandwidthUsedBytes Int      @default(0) @map("bandwidth_used_bytes")
  lastUpdated        DateTime @default(now()) @map("last_updated")

  user Users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_usage")
}
